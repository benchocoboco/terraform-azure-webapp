//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace Proverbes.WebServiceCompteur {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceCompteurSoap", Namespace="http://tempuri.org/")]
    public class ServiceCompteur : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ServiceCompteur() {
            this.Url = "http://localhost/ServicesProverbes/ServiceCompteur.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string newCounter(string name, int timeout) {
            object[] results = this.Invoke("newCounter", new object[] {
                        name,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewCounter(string name, int timeout, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newCounter", new object[] {
                        name,
                        timeout}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndnewCounter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newVisitor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string newVisitor(string counterid) {
            object[] results = this.Invoke("newVisitor", new object[] {
                        counterid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewVisitor(string counterid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newVisitor", new object[] {
                        counterid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndnewVisitor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newVisit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool newVisit(string visitorid) {
            object[] results = this.Invoke("newVisit", new object[] {
                        visitorid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewVisit(string visitorid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newVisit", new object[] {
                        visitorid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndnewVisit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Compteur getCounter(string counterid) {
            object[] results = this.Invoke("getCounter", new object[] {
                        counterid});
            return ((Compteur)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCounter(string counterid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCounter", new object[] {
                        counterid}, callback, asyncState);
        }
        
        /// <remarks/>
        public Compteur EndgetCounter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Compteur)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVisitor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Visiteur getVisitor(string visitorid) {
            object[] results = this.Invoke("getVisitor", new object[] {
                        visitorid});
            return ((Visiteur)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVisitor(string visitorid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVisitor", new object[] {
                        visitorid}, callback, asyncState);
        }
        
        /// <remarks/>
        public Visiteur EndgetVisitor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Visiteur)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class Compteur {
        
        /// <remarks/>
        public string Id;
        
        /// <remarks/>
        public string Nom;
        
        /// <remarks/>
        public int Timeout;
        
        /// <remarks/>
        public int NbreVisiteurs;
        
        /// <remarks/>
        public int NbreVisites;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class Visiteur {
        
        /// <remarks/>
        public string Id;
        
        /// <remarks/>
        public string IdCompteur;
        
        /// <remarks/>
        public System.DateTime DerniereVisite;
        
        /// <remarks/>
        public int NbreVisites;
    }
}
