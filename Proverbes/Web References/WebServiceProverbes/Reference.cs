//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace Proverbes.WebServiceProverbes {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceProverbesSoap", Namespace="http://tempuri.org/")]
    public class ServiceProverbes : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ServiceProverbes() {
            this.Url = "http://localhost/ServicesProverbes/ServiceProverbes.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proverbe[] search(string category, string contributor, string startdate) {
            object[] results = this.Invoke("search", new object[] {
                        category,
                        contributor,
                        startdate});
            return ((Proverbe[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsearch(string category, string contributor, string startdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("search", new object[] {
                        category,
                        contributor,
                        startdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public Proverbe[] Endsearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Proverbe[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proverbe get(string id) {
            object[] results = this.Invoke("get", new object[] {
                        id});
            return ((Proverbe)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Proverbe Endget(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Proverbe)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/today", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proverbe today() {
            object[] results = this.Invoke("today", new object[0]);
            return ((Proverbe)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begintoday(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("today", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Proverbe Endtoday(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Proverbe)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/categories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] categories() {
            object[] results = this.Invoke("categories", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincategories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("categories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] Endcategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class Proverbe {
        
        /// <remarks/>
        public string Id;
        
        /// <remarks/>
        public string Titre;
        
        /// <remarks/>
        public string Theme;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Contribution;
        
        /// <remarks/>
        public string Image;
        
        /// <remarks/>
        public System.DateTime Date;
    }
}
